# Initialization file for the main program. All fixed options are expected to be described in here
[creator]
who='Sebastian'                                                                                                                         # Data creator


[paths_to_files]
base_path='../S_correlators_L32'
mainpath='/xi='
resultspath='/results/xi='
resultsdir='/results'
plotsdir='/plots'
Gcplotsdir='/Gc_plots'
sizelabel=32


[correlators]
corrtype='g'                                                                                                                            # Greensite or Wilson correlator
xi=[3]                                                                                                                                  # Anisotropies
beta=[225,230,235,240,245,250,255,260]                                                                                      # Different betas
betanorm=100                                                                                                                            # Normalize the beta label to actual values
Lextent=16                                                                                                                              # Extent of available lattice data
Textent=16                                                                                                                              # T/2 Extent of available lattice data
size=[16,16,16,16,16,16,16,16]                                                                                                  # T/2 sizes
Ncfgs=100000                                                                                                                              # N configs (montecarlo samples) to read


[minimization_parameters]
dini_Gc    = 1                                                                                                                          # Initial bin (dini=1 is the first bin) fitted, if set to 0 it will correspond to fitting ALWAYS from bin=1
dstop_Gc   = 0                                                                                                                          # dini+dstop determines the last first bin fitted for the ranges variation
dmindata_Gc = 12                                                                                                                        # min(available data,dmindata) will define the min amount of data points fitted. If set to 0, then mindata will be n+1 for every model, where n is number of params. If set to 'half' then mindata will be set to half of the L/2 data
dini_Vr    = 1                                                                                                                          # Initial bin to fit
dstop_Vr   = 4                                                                                                                          # dini+dstop is the last initial bin to fit
dmindata_Vr = 8                                                                                                                         # Min number of data points to fit
dfin_Gc    = 100                                                                                                                          # Fitting up to final bin=dfin (or the final bin of the data if len(data)<dfin)
dfin_Vr    = 12                                                                                                                          # Fitting up to final bin=dfin (or the final bin of the data if len(data)<dfin)
reuse    = 1                                                                                                                            # If ==1, reuse previous best fit (previous model with less parameters) to start new fit (new extra parameters are just input from here)
inv_first= 0                                                                                                                            # If ==1 then does the inverse of the cov matrix before trimming it to the data region fitted, otherwise it trims first. Remember they are not the same
mcalls   = 10000                                                                                                                         # Minuit max calls per subroutine
mtol     = 0.00001                                                                                                                       # Minuit tol parameter 
inipars_GC  = [[0.01,2.0,2.0],[0.01,2.0,2.0,0.1,1.0],[0.01,2.0,2.0,0.1,1.0,0.1,1.0]]                                                                                             # Input pars to fit with
variants_GC = ['single','double','triple']                                                                                                 # String of nested models to fit with
jackkl      = 100000                                                                                                                      # Number of Jackknife samples to create and propagate
xiini       = 0                                                                                                                         # Initial xi used
xifin       = 0                                                                                                                         # Final xi used
fileini     = 0                                                                                                                         # Of all the data files, ordered by increasing beta, select on which one to start fitting
filefin     = 7                                                                                                                         # Of all the data files, ordered by increasing beta, select on which one to finish fitting
datatype_Gc = 'exp'                                                                                                                     # What is the data type we are fitting (exp vs dlog(ratio of log(t)/log(t+1) for approximated derivative) vs log?, etc...)
model_Gc    = 'nb_exp_np_pole'                                                                                                              # Model type to fit the data
model_Vr    = 'nb_VR_line'                                                                                                              # Model type to fit the data
datatype_Vr ='Vr'                                                                                                                       # What is the data type we are fitting (exp vs dlog(ratio of log(t)/log(t+1) for approximated derivative) vs log?, etc...)
inipars_Vr  =[[0.3,0.1,0.1]]                                                                                                            # Input pars to fit with
variants_Vr =['VR_a']                                                                                                                   # String of nested models to fit with
multiprocess= 50                                                                                                                        # Loop parallelization, it parallelizes the Jackknife loop. It does nothing it we do not call a Jackknife fit
cov_freeze  = 1                                                                                                                       # If ==1, freeze the covariance matrix, aka use the full sample all the times for the Jackknife minimizations
improve     = 0                                                                                                                        # If > 0, if a local minima is found in the fits, it will look for others better than the first one. The number in this flag just means the number of tries, they need not be sucessful in finding a local minima, or even if they are, they need not be better than the first one.


[extra]
clean     = 0    
cutoff_ma = 0.1                                                                                                                         # Drops all values from the MA sample which weight is less than total*cutoff_ma
norm      = 0                                                                                                                           # Extra option for plotting Gc(t) when fitted with an exponential, if ==1, the correlator gets "normalized" by the lowest mass exponential, which brings the scale in the y axis very close to 1, and showcases the data errors